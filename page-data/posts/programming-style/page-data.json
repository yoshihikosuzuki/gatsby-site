{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/programming-style","result":{"data":{"markdownRemark":{"id":"f6118040-93ea-5752-a022-86babfcc1291","html":"<div class=\"mermaid\">graph TD\n\nPython --> Rust\nRust --> C/C++\nPython --> シェルスクリプト\nシェルスクリプト --> 実行ファイル</div>\n<p>2020 年はこんな感じでやってみようと考えている。つまり、</p>\n<ul>\n<li>Python: ユーザに提供されるインターフェースとして採用。基本的にワークフローと可視化のためのグルー言語として使う。特定の高速なパッケージも使う。</li>\n<li>Rust: オブジェクト設計が必要なモジュールの実装のために採用。Python から呼び出す。</li>\n<li>C/C++: 本当に速度が必要な関数の実装のために採用。Rust から呼び出す。</li>\n<li>シェルスクリプト: 環境依存のコマンドや実行ファイルを隠蔽するための緩衝材として採用。Python から呼び出す。</li>\n<li>実行ファイル: この形式でしか提供されていないものなど。</li>\n</ul>\n<p>特にどこに力を入れたいかと言うと、Rust と C の低レベル部分 (SIMD 等) を頑張りたい。</p>","fields":{"slug":"/posts/programming-style","tagSlugs":["/tag/programming/","/tag/life-style/"]},"frontmatter":{"date":"2020-02-09","description":"2019年は Python 一本(プラス避けられないシェルスクリプト)といった感じだったが、2020年はどうやっていくか。","tags":["Programming","Life style"],"title":"2020年の開発スタイルについて"}}},"pageContext":{"slug":"/posts/programming-style"}}}