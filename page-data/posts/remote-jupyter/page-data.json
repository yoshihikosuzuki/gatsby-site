{"componentChunkName":"component---src-templates-post-template-js","path":"/posts/remote-jupyter","result":{"data":{"markdownRemark":{"id":"0d28aab5-61b9-5381-8b74-aa6453dbfaa7","html":"<h2 id=\"目次\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E6%AC%A1\" aria-label=\"目次 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目次</h2>\n<div class=\"toc\">\n<ul>\n<li><a href=\"#%E7%9B%AE%E7%9A%84\">目的</a></li>\n<li><a href=\"#%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98\">前提知識</a></li>\n<li><a href=\"#%E6%9C%AC%E9%A1%8C\">本題</a></li>\n<li><a href=\"#%E4%BD%99%E8%AB%87-%E4%BD%95%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B%EF%BC%9F\">(余談) 何をやっているのか？</a></li>\n</ul>\n</div>\n<p>以下のコードは<a href=\"https://gist.github.com/yoshihikosuzuki/a0b89404063368ddaabc30c8173d2a7d\" target=\"_blank\" rel=\"noopener noreferrer\">この Gist</a> にも上げてある。</p>\n<h2 id=\"目的\" style=\"position:relative;\"><a href=\"#%E7%9B%AE%E7%9A%84\" aria-label=\"目的 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>目的</h2>\n<p>最近では JupyterLab とか Visual Studio Code とか便利なサービスも増えてきたが、動作が重かったりしてなんだかんだいまだにバニラの Jupyter をブラウザで開いている、という人はそれなりにいるんじゃないかと思う。</p>\n<p>計算資源だったりの観点から、リモートの Jupyter を (起動はサーバで行って) ローカルのブラウザで開くという需要はかなりあって、実際それは SSH Forwarding を使うことで実現できる。</p>\n<p>この SSH Forwarding を使った、ローカルからのリモート Jupyter の接続方法については数多くの記事があるが、そのほとんどが</p>\n<ol>\n<li>リモートで <code class=\"language-text\">$ jupyter notebook</code> コマンドを実行して Jupyter を起動</li>\n<li>ローカルで <code class=\"language-text\">$ ssh ...</code> コマンドを実行してポートフォワーディングしてブラウザを開くと Jupyter の画面が現れる</li>\n</ol>\n<p>という2段階のステップを取っている。最終的にやりたいのは「ブラウザでリモート Jupyter のタブを開くこと」だけなのに、これを毎回やるのは正直面倒くさい。さらに言うなら、上のコマンド打ち込むためにターミナルを開くことすら本質的ではない。</p>\n<p>この記事では、まずこの処理をすべて行うスクリプトを作って、さらに Mac の Automator を使ってそのスクリプトを実行するアプリケーションを作る。これによって例えば、ターミナル等を経由しなくても Spotlight からすぐにリモートの Jupyter を起動できる。Windows/Linux では試していないが、スクリプトまではある程度共通して使えると思う。</p>\n<h2 id=\"前提知識\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E6%8F%90%E7%9F%A5%E8%AD%98\" aria-label=\"前提知識 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前提知識</h2>\n<ul>\n<li>SSH ポートフォワーディングを使ったリモート Jupyter の使い方</li>\n<li>Automator の基本的な使い方</li>\n</ul>\n<h2 id=\"本題\" style=\"position:relative;\"><a href=\"#%E6%9C%AC%E9%A1%8C\" aria-label=\"本題 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>本題</h2>\n<p>例えば以下のページを参考に、あらかじめリモートで Jupyter の設定をしておく。</p>\n<ul>\n<li><a href=\"https://jupyter-notebook.readthedocs.io/en/latest/public_server.html\" target=\"_blank\" rel=\"noopener noreferrer\">Running a notebook server</a></li>\n</ul>\n<p>この時点で、以下のような流れでローカルからリモートの Jupyter に接続できるようになっているはず。</p>\n<ol>\n<li>リモートで <code class=\"language-text\">$ jupyter notebook</code></li>\n<li>ローカルで <code class=\"language-text\">$ ssh -N -f -L ローカルでのポート番号:localhost:リモートのJUPYTERで設定したポート番号 ホスト名</code></li>\n<li>ローカルのブラウザで <code class=\"language-text\">http://localhost:ローカルでのポート番号</code> にアクセス</li>\n</ol>\n<p>これらを全部やってくれるスクリプトを書いて、ローカルのホームディレクトリに <code class=\"language-text\">remote_jupyter.sh</code> という名前で保存する (リモートのログインシェルの設定ファイルを <code class=\"language-text\">$HOME/.bash_profile</code> でハードコードしていたりするので、異なる場合は適宜修正する)：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">HOST_NAME</span><span class=\"token operator\">=</span>ホスト名\n<span class=\"token assign-left variable\">PORT_ID_LOCAL</span><span class=\"token operator\">=</span>ローカルでのポート番号\n<span class=\"token assign-left variable\">PORT_ID_REMOTE</span><span class=\"token operator\">=</span>リモートのJUPYTERで設定したポート番号\n<span class=\"token comment\"># Specify \"direct\" or \"sge\"</span>\n<span class=\"token assign-left variable\">EXEC_TYPE</span><span class=\"token operator\">=</span><span class=\"token string\">\"sge\"</span>\n\n<span class=\"token comment\"># Commands for checking existing jupyter process and for running jupyter</span>\n<span class=\"token comment\"># Put `run_jupyter.sh` at the home directory in the remote environment if using a job scheduler</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${EXEC_TYPE}</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"direct\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">CHECK_JUPYTER</span><span class=\"token operator\">=</span><span class=\"token string\">\"ps x\"</span>\n    <span class=\"token assign-left variable\">RUN_JUPYTER</span><span class=\"token operator\">=</span><span class=\"token string\">\"nohup jupyter notebook >/dev/null 2>&amp;1 &amp;\"</span>\n<span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${EXEC_TYPE}</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"sge\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token assign-left variable\">CHECK_JUPYTER</span><span class=\"token operator\">=</span><span class=\"token string\">\"qstat\"</span>\n    <span class=\"token comment\"># Options other than those specified here should be given in the remote file</span>\n    <span class=\"token assign-left variable\">RUN_JUPYTER</span><span class=\"token operator\">=</span><span class=\"token string\">\"qsub -N jupyter_nb -pe smp 4 -l hostname=<span class=\"token variable\">${HOST_NAME}</span> run_jupyter.sh\"</span>\n<span class=\"token keyword\">else</span>\n    <span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Invalid value of <span class=\"token variable\"><span class=\"token variable\">`</span>EXEC_TYPE<span class=\"token variable\">`</span></span>: <span class=\"token variable\">${EXEC_TYPE}</span>\"</span>\n    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Open the port</span>\n<span class=\"token function\">lsof</span> -s TCP:LISTEN -i <span class=\"token builtin class-name\">:</span><span class=\"token variable\">${PORT_ID_LOCAL}</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'NR > 1 {print <span class=\"token variable\">$2</span>}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> PID<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">kill</span> -KILL <span class=\"token variable\">${PID}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span>\n\n<span class=\"token comment\"># Run jupyter if not existing</span>\n<span class=\"token assign-left variable\">N_JUPYTER_PROC</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ssh</span> $<span class=\"token punctuation\">{</span>HOST_NAME<span class=\"token punctuation\">}</span> <span class=\"token string\">\"<span class=\"token variable\">${CHECK_JUPYTER}</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"jupyter\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${N_JUPYTER_PROC}</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">ssh</span> <span class=\"token variable\">${HOST_NAME}</span> <span class=\"token string\">\"source ~/.bash_profile; <span class=\"token variable\">${RUN_JUPYTER}</span>\"</span>\n    <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">fi</span>\n\n<span class=\"token comment\"># Start connection and then open a chrome tab</span>\n<span class=\"token function\">ssh</span> -N -f <span class=\"token punctuation\">\\</span>\n    -L localhost:<span class=\"token variable\">${PORT_ID_LOCAL}</span>:localhost:<span class=\"token variable\">${PORT_ID_REMOTE}</span> <span class=\"token punctuation\">\\</span>\n    -o <span class=\"token assign-left variable\">PermitLocalCommand</span><span class=\"token operator\">=</span>yes <span class=\"token punctuation\">\\</span>\n    -o <span class=\"token assign-left variable\">LocalCommand</span><span class=\"token operator\">=</span><span class=\"token string\">\"open -a '/Applications/Google Chrome.app' http://localhost:<span class=\"token variable\">${PORT_ID_LOCAL}</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token variable\">${HOST_NAME}</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">&amp;</span></code></pre></div>\n<p>このスクリプトには 5 行目の <code class=\"language-text\">EXEC_TYPE</code> で Jupyter の実行のしかたを選べる。デフォルトの <code class=\"language-text\">EXEC_TYPE=&quot;sge&quot;</code> だと、SGE でジョブとして投げて実行する (当然だがリモート環境に SGE がインストールされている必要がある; スクリプトを適宜修正すれば SLURM なども使える)。この場合、リモートのホームディレクトリに以下のスクリプトファイルを <code class=\"language-text\">run_jupyter.sh</code> という名前で置いておく必要がある (SGE のオプションは適宜変更する)：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token shebang important\">#!/bin/bash</span>\n<span class=\"token comment\">#$ -o sge.log</span>\n<span class=\"token comment\">#$ -j y</span>\n<span class=\"token comment\">#$ -S /bin/bash</span>\n<span class=\"token comment\">#$ -cwd</span>\n<span class=\"token comment\">#$ -V</span>\n<span class=\"token comment\">#$ -q all.q</span>\n\njupyter notebook</code></pre></div>\n<p>ジョブの CPU 数は最初の <code class=\"language-text\">remote_jupyter.sh</code> の <code class=\"language-text\">-pe smp 4</code> の部分で指定できる。上のままだと 4 コア。</p>\n<p>一方で、<code class=\"language-text\">EXEC_TYPE=&quot;direct&quot;</code> に変更すると、リモートで Jupyter をシェルから直接実行する (SSH ログインして <code class=\"language-text\">$ jupyter notebook</code> を実行するのと同じ)。</p>\n<p>この時点で、ローカルのターミナルのホームディレクトリで以下のコマンドを実行するとブラウザが起動して Jupyter のタブが開くようになっているはず：</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./remote_jupyter.sh</code></pre></div>\n<p>あとは Automator を開いて、「アプリケーション」 -> 「シェルスクリプトを実行」から以下のコマンドを指定してアプリケーションを例えば <code class=\"language-text\">jupyter_remote.app</code> という名前で作成すれば、Spotlight -> <code class=\"language-text\">jupyter_remote</code> (実際には Mac がアプリケーション名を補完してくれるので <code class=\"language-text\">ju</code> くらいで十分) と打ち込むだけでブラウザで Jupyter のタブが開くようになる。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">nohup</span> <span class=\"token environment constant\">$HOME</span>/remote_jupyter.sh <span class=\"token operator\">></span> /dev/null <span class=\"token operator\"><span class=\"token file-descriptor important\">2</span>></span><span class=\"token file-descriptor important\">&amp;1</span> <span class=\"token operator\">&amp;</span></code></pre></div>\n<h2 id=\"余談-何をやっているのか？\" style=\"position:relative;\"><a href=\"#%E4%BD%99%E8%AB%87-%E4%BD%95%E3%82%92%E3%82%84%E3%81%A3%E3%81%A6%E3%81%84%E3%82%8B%E3%81%AE%E3%81%8B%EF%BC%9F\" aria-label=\"余談 何をやっているのか？ permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>(余談) 何をやっているのか？</h2>\n<p>上のスクリプト (<code class=\"language-text\">remote_jupyter.sh</code>) で何をしているのかを少しだけ書く。</p>\n<p>まず、</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">lsof</span> -s TCP:LISTEN -i <span class=\"token builtin class-name\">:</span><span class=\"token variable\">${PORT_ID_LOCAL}</span> <span class=\"token operator\">|</span> <span class=\"token function\">awk</span> <span class=\"token string\">'NR > 1 {print <span class=\"token variable\">$2</span>}'</span> <span class=\"token operator\">|</span> <span class=\"token function\">uniq</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">while</span> <span class=\"token builtin class-name\">read</span> PID<span class=\"token punctuation\">;</span> <span class=\"token keyword\">do</span> <span class=\"token function\">kill</span> -KILL <span class=\"token variable\">${PID}</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">done</span></code></pre></div>\n<p>の部分では、変数 <code class=\"language-text\">PORT_ID_LOCAL</code> で指定されたポート番号がローカルで使用済みの場合に、SSH 接続する前にそのポートを開放する。これは例えば今回のスクリプトを使って複数回 Jupyter を起動したい場合に必要で、前回の SSH 接続が残ったままで新しい SSH 接続ができなくなることを防ぐ。</p>\n<p>その後、</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token assign-left variable\">N_JUPYTER_PROC</span><span class=\"token operator\">=</span><span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">ssh</span> $<span class=\"token punctuation\">{</span>HOST_NAME<span class=\"token punctuation\">}</span> <span class=\"token string\">\"<span class=\"token variable\">${CHECK_JUPYTER}</span>\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> <span class=\"token string\">\"jupyter\"</span> <span class=\"token operator\">|</span> <span class=\"token function\">wc</span> -l<span class=\"token variable\">)</span></span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token variable\">${N_JUPYTER_PROC}</span> <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span>\n    <span class=\"token function\">ssh</span> <span class=\"token variable\">${HOST_NAME}</span> <span class=\"token string\">\"source ~/.bash_profile; <span class=\"token variable\">${RUN_JUPYTER}</span>\"</span>\n    <span class=\"token function\">sleep</span> <span class=\"token number\">10</span>\n<span class=\"token keyword\">fi</span></code></pre></div>\n<p>の部分で、リモートですでに実行されている Jupyter プロセスもしくはジョブがないか調べる。もしあれば何もせず、既存のものをそのまま使用する。もしなければ、新しく Jupyter を実行する。(<code class=\"language-text\">sleep 10</code> 不要かも。)</p>\n<p>最後の、</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">ssh</span> -N -f <span class=\"token punctuation\">\\</span>\n    -L localhost:<span class=\"token variable\">${PORT_ID_LOCAL}</span>:localhost:<span class=\"token variable\">${PORT_ID_REMOTE}</span> <span class=\"token punctuation\">\\</span>\n    -o <span class=\"token assign-left variable\">PermitLocalCommand</span><span class=\"token operator\">=</span>yes <span class=\"token punctuation\">\\</span>\n    -o <span class=\"token assign-left variable\">LocalCommand</span><span class=\"token operator\">=</span><span class=\"token string\">\"open -a '/Applications/Google Chrome.app' http://localhost:<span class=\"token variable\">${PORT_ID_LOCAL}</span>\"</span> <span class=\"token punctuation\">\\</span>\n    <span class=\"token variable\">${HOST_NAME}</span> <span class=\"token punctuation\">\\</span>\n<span class=\"token operator\">&amp;</span></code></pre></div>\n<p>この部分はよくある Jupyter SSH Forwarding のだいたいそのままで、接続後に Chrome を開くようにしている。</p>","fields":{"slug":"/posts/remote-jupyter","tagSlugs":["/tag/life-style/","/tag/jupyter/","/tag/mac/"]},"frontmatter":{"date":"2020-02-11","description":"ローカルからリモート Jupyter を使うための一通りの処理を行ってくれるアプリケーションを作る。","tags":["Life style","Jupyter","Mac"],"title":"ローカルからリモート Jupyter を一つのコマンド/アプリケーションで使う (Mac)"}}},"pageContext":{"slug":"/posts/remote-jupyter"}}}